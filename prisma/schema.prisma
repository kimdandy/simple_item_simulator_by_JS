generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma" // 경로 주의
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  userNo     Int          @id @unique @default(autoincrement())
  userId     String       @unique @map("userId")
  password   String       @map("password")
  name       String       @map("name")
  characters Characters[]

  @@map("Accounts")
}

model Characters {
  characterId    Int    @id @unique @default(autoincrement())
  character_name String @unique @map("character_name")
  health         Int    @map("health")
  power          Int    @map("power")
  money          Int    @map("money")
  userId         String @map("userId")

  accounts  Accounts   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  inventory Inventory[]
  equipment Equipments[]

  @@index([userId], map: "Characters_userId_fkey")
  @@map("Characters")
}

model Items {
  item_id    Int    @id @default(autoincrement()) 
  item_code  Int    @unique
  item_name  String @unique
  item_price Int
  item_stat  Json   @map("item_stat")

  inventory Inventory[]
  //inventory_code Inventory[] @relation("inven_code")
  //inventory_name Inventory[] @relation("inven_name")

  equipment Equipments[]
  //equipment_code Equipment[] @relation("equip_code")
  //equipment_name Equipment[] @relation("equip_name")

  @@map("Items")
}

model Inventory {
  inven_id          Int        @id @default(autoincrement())
  character   Characters @relation(fields: [characterId], references: [characterId])
  characterId Int
  item        Items      @relation(fields: [itemId], references: [item_code])
  itemId      Int
  item_count  Int
}

model Equipments {
  equip_id           Int        @id @default(autoincrement())
  character    Characters @relation(fields: [characterId], references: [characterId])
  characterId  Int
  item         Items      @relation(fields: [itemId], references: [item_code])
  itemId       Int

  @@unique([characterId, itemId]) // 동일 아이템 중복 장착 방지
}
