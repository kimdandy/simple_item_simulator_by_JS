generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma" // 경로 주의
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Accounts {
  userNo     Int          @id @unique @default(autoincrement())
  userId     String       @unique @map("userId")
  password   String       @map("password")
  name       String       @map("name")
  characters Characters[]

  @@map("Accounts")
}

model Characters {
  characterId    Int    @id @unique @default(autoincrement())
  character_name String @unique @map("character_name")
  health         Int    @map("health")
  power          Int    @map("power")
  money          Int    @map("money")
  userId         String @map("userId")

  accounts  Accounts   @relation(fields: [userId], references: [userId], onDelete: Cascade)
  inventory Inventory?
  equipment Equipment?

  @@index([userId], map: "Characters_userId_fkey")
  @@map("Characters")
}

model Items {
  item_id    Int    @id @default(autoincrement())
  item_code  Int    @unique
  item_name  String @unique
  item_price Int
  item_stat  Json   @map("item_stat")

  //inventory Inventory[]
  inventory_code Inventory[] @relation("inven_code")
  inventory_name Inventory[] @relation("inven_name")

  //equipment Equipment[]
  equipment_code Equipment[] @relation("equip_code")
  equipment_name Equipment[] @relation("equip_name")

  @@map("Items")
}

model Inventory {
  inven_id       Int    @id @default(autoincrement())
  character_name String @unique
  item_code      Int    @unique
  item_name      String @unique
  item_count     Int

  characters Characters @relation(fields: [character_name], references: [character_name], onDelete: Cascade)
  //items      Items      @relation( fields: [item_code], references: [item_code], onDelete: Cascade)
  inven_code Items      @relation("inven_code", fields: [item_code], references: [item_code], onDelete: Cascade)
  inven_name Items      @relation("inven_name", fields: [item_name], references: [item_name], onDelete: Cascade)

  @@map("Inventory")
}

model Equipment {
  equip_id       Int    @id @default(autoincrement())
  character_name String @unique
  item_code      Int    @unique
  item_name      String @unique

  characters Characters @relation(fields: [character_name], references: [character_name], onDelete: Cascade)
  //items      Items      @relation(fields: [item_code], references: [item_code], onDelete: Cascade)
  equip_code Items      @relation("equip_code", fields: [item_code], references: [item_code], onDelete: Cascade)
  equip_name Items      @relation("equip_name", fields: [item_name], references: [item_name], onDelete: Cascade)

  @@map("Equipment")
}
